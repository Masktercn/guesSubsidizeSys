<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.gues.mapper.UserMapper">

    <insert id="insert" parameterType="User">
        insert into t_users(studentNum, password, passwordSalt, createDateTime) values(#{studentNum}, #{password}, #{passwordSalt}, now())
    </insert>

    <update id="update" parameterType="User">
        update t_users set
            name=#{name},
            gender=#{gender},
            idCardNum=#{idCardNum},
            birthday=#{birthday},
            studentNum=#{studentNum},
            phone=#{phone},
            password=#{password},
            isDeleted=#{isDeleted},
            isChecked=#{isChecked}
        where id=#{id}
    </update>

    <delete id="delete" parameterType="long">
        update t_users set isDeleted=true where id=#{id}
    </delete>

    <select id="select" parameterType="User" resultType="User">
        select * from t_users
        where isDeleted=false
            <if test="id!=null"> and id=#{id}</if>
            <if test="name!=null"> and name=#{name}</if>
            <if test="gender!=null"> and gender=#{gender}</if>
            <if test="idCardNum!=null"> and idCardNum=#{idCardNum}</if>
            <if test="birthday!=null"> and birthday=#{birthday}</if>
            <if test="studentNum!=null"> and studentNum=#{studentNum}</if>
            <if test="phone!=null"> and phone=#{phone}</if>
            <if test="isDeleted!=null"> and isDeleted=#{isDeleted}</if>
            <if test="isChecked!=null"> and isChecked=#{isChecked}</if>
    </select>

    <select id="search" parameterType="map" resultType="teaCheckUserPojo">
        select u.`name` name, u.studentNum studentNum,co.`name` collegeName, c.`name` className,sub.checkStatus from t_users u
         left join t_classusers cu on cu.userId=u.id
         left join t_classes c on c.id=cu.classId
         left join t_collegeclasses cc on c.id=cc.classId
         left join t_colleges co on co.id=cc.collegeId
         left join t_subsidizesinfo sub on sub.userId=u.id and sub.`key`='nationality'
        left join t_classadminusers cladm on cladm.classId=c.id
        left join t_adminusers admu on admu.id=cladm.adminUserId
        <where>
            <if test="name!=null"> and u.name=#{name}</if>
            <if test="checkStatus!=null"> and sub.checkStatus=#{checkStatus}</if>
            <if test="year!=null"> and YEAR(sub.createDateTime)=#{year}</if>
            and admu.id=#{adminUserId}
        </where>
    </select>

    <select id="selectAllBaseInfo" parameterType="map" resultType="StudentBaseInfo">
        select
            u.id studentId,
            u.studentNum studentNum,
            u.`name` studentName,
            u.idCardNum idCard,
            clg.`name` collegeName,
            c.`name` className
        from t_users u
                 left join t_classusers cu on u.id=cu.userId
                 left join t_classes c on c.id=cu.classId
                 left join t_collegeclasses cc on cc.classId=c.id
                 left join t_colleges clg on clg.id=cc.collegeId
        <where>
            <if test="param!=null"> and (u.name like #{param} or u.idCardNum like #{param} or u.studentNum like #{param} or c.name like #{param} or clg.name like #{param} )</if>
        </where>
    </select>

    <select id="selectListByClassId" parameterType="long" resultType="User">
        select * from t_users u
          left join t_classusers cu on u.id=cu.userId
          left join t_classes c on c.id=cu.classId
        where c.id=#{clzId}
    </select>
</mapper>